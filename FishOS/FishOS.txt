FishOS
├── bochsrc.bxrc				// bochs虚拟机的配置文件
├── boot					// 引导程序所在文件夹
│   ├── boot.asm				// boot程序，找到loader程序
│   ├── bootbck.asm				// boot程序的备份
│   ├── bootbck.bin
│   ├── bootbck.com
│   ├── boot.bin	
│   ├── disloader.asm
│   ├── include				
│   │   ├── FAT32Head.inc			// 文件系统头部定义
│   │   └── pm.inc				// 段描述符、段选择子等数据结构的定义
│   ├── lib.inc				// 内存拷贝函数的定义
│   ├── loader.asm				// loader程序，找到kernel文件，加载入内核，同时完成从实模式到保护模式的跳转
│   ├── loaderbck.asm
│   └── loader.bin
├── fishos.img				// 启动硬盘，用于承载boot.bin、loader.bin以及kernel.bin文件
├── format					// 用于格式化硬盘，并将boot.bin、loader.bin、kernel.bin文件写入fishos.img中
├── format.c
├── include
│   ├── const.h				// 常量定义，此处声明n多宏，系统关键常量，包括PUBLIC、PRIVATE以及EXTERN等限制函数作用域的变量，GDT和IDT中描述符的个数等等变量
│   ├── globalbck.h			
│   ├── global.h				// 定义全局变量，eg在屏幕上的输出位置、全局描述符表、中断向量表、tss以及处于ready状态的进程等
│   ├── proc.h				// 定义进程相关变量的结构体，主要是进程控制块的数据结构
│   ├── protect.h				// 结构体变量定义，eg段描述符、门描述符、tss结构以及相关宏的声明
│   ├── proto.h				// 声明部分功能性函数，里面的函数在kernel文件夹和lib文件夹中定义
│   ├── sconst.inc				// 定义寄存器值在TSS中的相对位置，使用equ表示，不占用内存
│   ├── string.h				// 声明内存重置函数和内存拷贝函数
│   └── type.h				// 将变量类型定义为自己便于理解的类型
├── kernel
│   ├── diskernel.asm
│   ├── global.c				// 定义全局变量，eg进程表、任务栈等
│   ├── global.o				
│   ├── i8259.c				// 初始化中断控制器
│   ├── i8259.o
│   ├── kernel.asm				// 内核入口文件，完成对段描述符等数据结构的重定义和重新存储，并启动第一个进程
│   ├── kernel.bck
│   │   ├── kernel.bck.asm
│   │   └── kernelbck.bin
│   ├── kernel.bin
│   ├── kernel.o
│   ├── main.c				// 第一个进程的函数主体部分，以及初始化进程的数据结构的代码
│   ├── main.o		
│   ├── protect.c				// 初始化中断向量表，并为其绑定中断处理函数
│   ├── protect.o
│   ├── start.c				// 初始化段描述符表、中断向量表，由原位置拷贝到新位置，并使用新的变量来表示
│   └── start.o
├── lib
│   ├── disp_int.asm			// 在屏幕上输出一个数字
│   ├── klib.asm				// 定义部分功能函数，eg输出字符串、输出有颜色的字符串、输入/输出字节
│   ├── klib.c				// 定义delay函数
│   ├── klibc.o
│   ├── klib.o
│   ├── string.asm				// 内存拷贝和内存重置函数的定义
│   └── string.o
├── Makefile
├── MemAndPage.inc
└── README
